{
  "{\"sourceRoot\":\"/Users/alonrobinson/Projects/expressless\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/alonrobinson/Projects/expressless\",\"filename\":\"/Users/alonrobinson/Projects/expressless/router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/alonrobinson/Projects/expressless\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/alonrobinson/Projects/expressless",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/alonrobinson/Projects/expressless",
      "filename": "/Users/alonrobinson/Projects/expressless/router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/alonrobinson/Projects/expressless",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/alonrobinson/Projects/expressless/router.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/alonrobinson/Projects/expressless/router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/alonrobinson/Projects/expressless",
        "sourceFileName": "router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar url = require('url');\n\nvar fs = require('fs');\n\nvar Router =\n/*#__PURE__*/\nfunction () {\n  function Router() {\n    _classCallCheck(this, Router);\n\n    this.routes = {\n      get: {},\n      post: {}\n    };\n  }\n\n  _createClass(Router, [{\n    key: \"get\",\n    value: function get(route, handler) {\n      this.registerRoute('get', route, handler);\n    }\n  }, {\n    key: \"post\",\n    value: function post(route, handler) {\n      this.registerRoute('post', route, handler);\n    }\n  }, {\n    key: \"route\",\n    value: function route(req) {\n      this.routes[req.method.toLowerCase()][req.url];\n      return this.routes[req.method.toLowerCase()][req.url];\n    }\n  }, {\n    key: \"registerRoute\",\n    value: function registerRoute(method, route, handler) {\n      this.routes[method][route] = handler;\n    }\n  }, {\n    key: \"missingRoute\",\n    value: function missingRoute(req, res) {\n      // Try to read the file locally, this is a security hole, yo /../../etc/passwd\n      var routeUrl = url.parse(req.url);\n      var path = __dirname + '/expressless-client' + routeUrl.pathname;\n      console.log(path);\n      var mime = req.headers.accepts || 'text/html';\n      fs.readFile(path, function (err, data) {\n        if (err) {\n          res.writeHead(404, {\n            'Content-Type': 'text/plain'\n          });\n          res.end(\"No route registered for \" + url.pathname);\n        }\n\n        console.log('huxzzaa');\n        res.writeHead(200, {\n          'Content-Type': mime\n        });\n        res.end(data);\n      });\n    }\n  }]);\n\n  return Router;\n}();\n\n;\nmodule.exports = new Router();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyJdLCJuYW1lcyI6WyJ1cmwiLCJyZXF1aXJlIiwiZnMiLCJSb3V0ZXIiLCJyb3V0ZXMiLCJnZXQiLCJwb3N0Iiwicm91dGUiLCJoYW5kbGVyIiwicmVnaXN0ZXJSb3V0ZSIsInJlcSIsIm1ldGhvZCIsInRvTG93ZXJDYXNlIiwicmVzIiwicm91dGVVcmwiLCJwYXJzZSIsInBhdGgiLCJfX2Rpcm5hbWUiLCJwYXRobmFtZSIsImNvbnNvbGUiLCJsb2ciLCJtaW1lIiwiaGVhZGVycyIsImFjY2VwdHMiLCJyZWFkRmlsZSIsImVyciIsImRhdGEiLCJ3cml0ZUhlYWQiLCJlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7SUFFTUUsTTs7O0FBQ0osb0JBQWU7QUFBQTs7QUFDYixTQUFLQyxNQUFMLEdBQWM7QUFDWkMsTUFBQUEsR0FBRyxFQUFFLEVBRE87QUFFWkMsTUFBQUEsSUFBSSxFQUFFO0FBRk0sS0FBZDtBQUlEOzs7O3dCQUVJQyxLLEVBQU9DLE8sRUFBUztBQUNuQixXQUFLQyxhQUFMLENBQW1CLEtBQW5CLEVBQTBCRixLQUExQixFQUFpQ0MsT0FBakM7QUFDRDs7O3lCQUNLRCxLLEVBQU9DLE8sRUFBUztBQUNwQixXQUFLQyxhQUFMLENBQW1CLE1BQW5CLEVBQTJCRixLQUEzQixFQUFrQ0MsT0FBbEM7QUFDRDs7OzBCQUNNRSxHLEVBQUs7QUFDVixXQUFLTixNQUFMLENBQVlNLEdBQUcsQ0FBQ0MsTUFBSixDQUFXQyxXQUFYLEVBQVosRUFBc0NGLEdBQUcsQ0FBQ1YsR0FBMUM7QUFDQSxhQUFPLEtBQUtJLE1BQUwsQ0FBWU0sR0FBRyxDQUFDQyxNQUFKLENBQVdDLFdBQVgsRUFBWixFQUFzQ0YsR0FBRyxDQUFDVixHQUExQyxDQUFQO0FBQ0Q7OztrQ0FDY1csTSxFQUFRSixLLEVBQU9DLE8sRUFBUztBQUNyQyxXQUFLSixNQUFMLENBQVlPLE1BQVosRUFBb0JKLEtBQXBCLElBQTZCQyxPQUE3QjtBQUNEOzs7aUNBQ2FFLEcsRUFBS0csRyxFQUFLO0FBQ3RCO0FBQ0EsVUFBTUMsUUFBUSxHQUFHZCxHQUFHLENBQUNlLEtBQUosQ0FBVUwsR0FBRyxDQUFDVixHQUFkLENBQWpCO0FBQ0EsVUFBTWdCLElBQUksR0FBR0MsU0FBUyxHQUFHLHFCQUFaLEdBQW9DSCxRQUFRLENBQUNJLFFBQTFEO0FBQ0FDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFaO0FBQ0EsVUFBTUssSUFBSSxHQUFHWCxHQUFHLENBQUNZLE9BQUosQ0FBWUMsT0FBWixJQUF1QixXQUFwQztBQUNBckIsTUFBQUEsRUFBRSxDQUFDc0IsUUFBSCxDQUFZUixJQUFaLEVBQWtCLFVBQUNTLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQy9CLFlBQUdELEdBQUgsRUFBUTtBQUNOWixVQUFBQSxHQUFHLENBQUNjLFNBQUosQ0FBYyxHQUFkLEVBQW1CO0FBQUMsNEJBQWdCO0FBQWpCLFdBQW5CO0FBQ0FkLFVBQUFBLEdBQUcsQ0FBQ2UsR0FBSixDQUFRLDZCQUE2QjVCLEdBQUcsQ0FBQ2tCLFFBQXpDO0FBQ0Q7O0FBQ0RDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVo7QUFDQVAsUUFBQUEsR0FBRyxDQUFDYyxTQUFKLENBQWMsR0FBZCxFQUFtQjtBQUFDLDBCQUFnQk47QUFBakIsU0FBbkI7QUFDQVIsUUFBQUEsR0FBRyxDQUFDZSxHQUFKLENBQVFGLElBQVI7QUFDRCxPQVJEO0FBVUQ7Ozs7OztBQUVGO0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJM0IsTUFBSixFQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWxvbnJvYmluc29uL1Byb2plY3RzL2V4cHJlc3NsZXNzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXJsID0gcmVxdWlyZSgndXJsJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNsYXNzIFJvdXRlciB7XG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLnJvdXRlcyA9IHtcbiAgICAgIGdldDoge30sXG4gICAgICBwb3N0OiB7fSxcbiAgICB9O1xuICB9XG4gIFxuICBnZXQgKHJvdXRlLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5yZWdpc3RlclJvdXRlKCdnZXQnLCByb3V0ZSwgaGFuZGxlcik7XG4gIH1cbiAgcG9zdCAocm91dGUsIGhhbmRsZXIpIHtcbiAgICB0aGlzLnJlZ2lzdGVyUm91dGUoJ3Bvc3QnLCByb3V0ZSwgaGFuZGxlcik7XG4gIH1cbiAgcm91dGUgKHJlcSkge1xuICAgIHRoaXMucm91dGVzW3JlcS5tZXRob2QudG9Mb3dlckNhc2UoKV1bcmVxLnVybF1cbiAgICByZXR1cm4gdGhpcy5yb3V0ZXNbcmVxLm1ldGhvZC50b0xvd2VyQ2FzZSgpXVtyZXEudXJsXTtcbiAgfVxuICByZWdpc3RlclJvdXRlIChtZXRob2QsIHJvdXRlLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5yb3V0ZXNbbWV0aG9kXVtyb3V0ZV0gPSBoYW5kbGVyO1xuICB9XG4gIG1pc3NpbmdSb3V0ZSAocmVxLCByZXMpIHtcbiAgICAvLyBUcnkgdG8gcmVhZCB0aGUgZmlsZSBsb2NhbGx5LCB0aGlzIGlzIGEgc2VjdXJpdHkgaG9sZSwgeW8gLy4uLy4uL2V0Yy9wYXNzd2RcbiAgICBjb25zdCByb3V0ZVVybCA9IHVybC5wYXJzZShyZXEudXJsKTtcbiAgICBjb25zdCBwYXRoID0gX19kaXJuYW1lICsgJy9leHByZXNzbGVzcy1jbGllbnQnICsgcm91dGVVcmwucGF0aG5hbWU7IFxuICAgIGNvbnNvbGUubG9nKHBhdGgpXG4gICAgY29uc3QgbWltZSA9IHJlcS5oZWFkZXJzLmFjY2VwdHMgfHwgJ3RleHQvaHRtbCc7XG4gICAgZnMucmVhZEZpbGUocGF0aCwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgaWYoZXJyKSB7XG4gICAgICAgIHJlcy53cml0ZUhlYWQoNDA0LCB7J0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3BsYWluJ30pO1xuICAgICAgICByZXMuZW5kKFwiTm8gcm91dGUgcmVnaXN0ZXJlZCBmb3IgXCIgKyB1cmwucGF0aG5hbWUpO1xuICAgICAgfVxuICAgICAgY29uc29sZS5sb2coJ2h1eHp6YWEnKVxuICAgICAgcmVzLndyaXRlSGVhZCgyMDAsIHsnQ29udGVudC1UeXBlJzogbWltZX0pO1xuICAgICAgcmVzLmVuZChkYXRhKTtcbiAgICB9KTsgICAgIFxuXG4gIH1cbiAgXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBSb3V0ZXIoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "router.js"
      ],
      "names": [
        "url",
        "require",
        "fs",
        "Router",
        "routes",
        "get",
        "post",
        "route",
        "handler",
        "registerRoute",
        "req",
        "method",
        "toLowerCase",
        "res",
        "routeUrl",
        "parse",
        "path",
        "__dirname",
        "pathname",
        "console",
        "log",
        "mime",
        "headers",
        "accepts",
        "readFile",
        "err",
        "data",
        "writeHead",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;IAEME,M;;;AACJ,oBAAe;AAAA;;AACb,SAAKC,MAAL,GAAc;AACZC,MAAAA,GAAG,EAAE,EADO;AAEZC,MAAAA,IAAI,EAAE;AAFM,KAAd;AAID;;;;wBAEIC,K,EAAOC,O,EAAS;AACnB,WAAKC,aAAL,CAAmB,KAAnB,EAA0BF,KAA1B,EAAiCC,OAAjC;AACD;;;yBACKD,K,EAAOC,O,EAAS;AACpB,WAAKC,aAAL,CAAmB,MAAnB,EAA2BF,KAA3B,EAAkCC,OAAlC;AACD;;;0BACME,G,EAAK;AACV,WAAKN,MAAL,CAAYM,GAAG,CAACC,MAAJ,CAAWC,WAAX,EAAZ,EAAsCF,GAAG,CAACV,GAA1C;AACA,aAAO,KAAKI,MAAL,CAAYM,GAAG,CAACC,MAAJ,CAAWC,WAAX,EAAZ,EAAsCF,GAAG,CAACV,GAA1C,CAAP;AACD;;;kCACcW,M,EAAQJ,K,EAAOC,O,EAAS;AACrC,WAAKJ,MAAL,CAAYO,MAAZ,EAAoBJ,KAApB,IAA6BC,OAA7B;AACD;;;iCACaE,G,EAAKG,G,EAAK;AACtB;AACA,UAAMC,QAAQ,GAAGd,GAAG,CAACe,KAAJ,CAAUL,GAAG,CAACV,GAAd,CAAjB;AACA,UAAMgB,IAAI,GAAGC,SAAS,GAAG,qBAAZ,GAAoCH,QAAQ,CAACI,QAA1D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,IAAI,GAAGX,GAAG,CAACY,OAAJ,CAAYC,OAAZ,IAAuB,WAApC;AACArB,MAAAA,EAAE,CAACsB,QAAH,CAAYR,IAAZ,EAAkB,UAACS,GAAD,EAAMC,IAAN,EAAe;AAC/B,YAAGD,GAAH,EAAQ;AACNZ,UAAAA,GAAG,CAACc,SAAJ,CAAc,GAAd,EAAmB;AAAC,4BAAgB;AAAjB,WAAnB;AACAd,UAAAA,GAAG,CAACe,GAAJ,CAAQ,6BAA6B5B,GAAG,CAACkB,QAAzC;AACD;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAP,QAAAA,GAAG,CAACc,SAAJ,CAAc,GAAd,EAAmB;AAAC,0BAAgBN;AAAjB,SAAnB;AACAR,QAAAA,GAAG,CAACe,GAAJ,CAAQF,IAAR;AACD,OARD;AAUD;;;;;;AAEF;AAEDG,MAAM,CAACC,OAAP,GAAiB,IAAI3B,MAAJ,EAAjB",
      "sourceRoot": "/Users/alonrobinson/Projects/expressless",
      "sourcesContent": [
        "const url = require('url');\nconst fs = require('fs');\n\nclass Router {\n  constructor () {\n    this.routes = {\n      get: {},\n      post: {},\n    };\n  }\n  \n  get (route, handler) {\n    this.registerRoute('get', route, handler);\n  }\n  post (route, handler) {\n    this.registerRoute('post', route, handler);\n  }\n  route (req) {\n    this.routes[req.method.toLowerCase()][req.url]\n    return this.routes[req.method.toLowerCase()][req.url];\n  }\n  registerRoute (method, route, handler) {\n    this.routes[method][route] = handler;\n  }\n  missingRoute (req, res) {\n    // Try to read the file locally, this is a security hole, yo /../../etc/passwd\n    const routeUrl = url.parse(req.url);\n    const path = __dirname + '/expressless-client' + routeUrl.pathname; \n    console.log(path)\n    const mime = req.headers.accepts || 'text/html';\n    fs.readFile(path, (err, data) => {\n      if(err) {\n        res.writeHead(404, {'Content-Type': 'text/plain'});\n        res.end(\"No route registered for \" + url.pathname);\n      }\n      console.log('huxzzaa')\n      res.writeHead(200, {'Content-Type': mime});\n      res.end(data);\n    });     \n\n  }\n  \n};\n\nmodule.exports = new Router();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564732757396
  }
}